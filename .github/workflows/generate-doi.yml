name: generate-doi

on:
    schedule:
        - cron: '0 0 * * 0' # Every Sunday at midnight
    workflow_dispatch:

jobs:
    get-updated-apps:
        runs-on: ubuntu-22.04
        outputs:
            unpublished_app_list: ${{ steps.list_apps.outputs.unpublished_app_list }}
            app_batches: ${{ steps.split_apps.outputs.app_batches }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Check for apps to publish to Zenodo
              id: list_apps
              run: |
                # Get the list of unpublished images from app.json
                echo "Fetching apps list from GitHub registry..."
                export IMAGENAME_BUILDDATE=$(python .github/workflows/get-unpublished-apps.py --zenodo_token ${{ secrets.ZENODO_TOKEN }})
                echo "unpublished_app_list=${IMAGENAME_BUILDDATE}" >> $GITHUB_OUTPUT
            - name: Split apps into batches
              id: split_apps
              run: |
                echo "Splitting apps into batches..."
                python -c "
                  import json
                  apps = json.loads('${{ steps.list_apps.outputs.unpublished_app_list }}')
                  batch_size = 50
                  batches = [apps[i:i + batch_size] for i in range(0, len(apps), batch_size)]
                  print(f'app_batches={json.dumps(batches)}', file=open('${GITHUB_OUTPUT}', 'a'))
                "

    publish-doi:
      needs: get-updated-apps
      runs-on: ubuntu-22.04
      if: ${{ needs.get-updated-apps.outputs.unpublished_app_list != '[]' }}
      strategy:
          fail-fast: false
          matrix:
            batch: ${{ fromJSON(needs.get-updated-apps.outputs.app_batches) }}
      steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
                fetch-depth: 0
          - uses: actions/setup-python@v5
            with:
              python-version: 3.10
          - name : Publish singularity container files in nectar cloud to Zenodo
            shell: bash
            run: |
              for app in "${{ matrix.batch[@] }}"; do
                echo "Processing app: $app"
                export IMAGE_HOME="/home/runner"
                curl --output "$IMAGE_HOME/$app.simg" "https://object-store.rc.nectar.org.au/v1/AUTH_dead991e1fa847e3afcca2d3a7041f5d/neurodesk/$app.simg"
                echo "Upload container $IMAGE_HOME/$app.simg to Zenodo"
                export DOI_URL=$(python3 .github/workflows/publish-doi.py --container_filepath="$IMAGE_HOME/$app.simg" --container_name=$app --token=${{ secrets.ZENODO_TOKEN }})
                echo "DOI_URL: $DOI_URL"
              done